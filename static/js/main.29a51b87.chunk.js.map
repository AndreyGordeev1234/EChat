{"version":3,"sources":["assets/sounds/message.mp3","constraints/ActionTypes.ts","actions/index.ts","utils/validateFields.ts","components/MessageForm/index.ts","components/MessageForm/MessageForm.tsx","components/Message/Message.tsx","utils/fromUnixToDate.ts","components/Messages/index.ts","components/Messages/Messages.tsx","utils/useDialogSub.ts","components/Chat/NoDialog.tsx","components/Chat/index.ts","components/Chat/Chat.tsx","assets/images/svg/nav-dialogs.svg","assets/images/svg/nav-dialogs-active.svg","assets/images/svg/nav-find.svg","assets/images/svg/nav-find-active.svg","components/ChatsNav/index.ts","components/ChatsNav/ChatsNav.tsx","components/Dialog/Dialog.tsx","utils/authContext.tsx","components/Dialogs/NoDialogs.tsx","components/Dialogs/index.ts","components/Dialogs/Dialogs.tsx","components/FindInput/FindInput.tsx","components/UserInFind/index.ts","components/UserInFind/UserInFind.tsx","components/Find/index.ts","components/Find/Find.tsx","components/Profile/index.ts","components/Profile/Profile.tsx","components/Chats/index.ts","components/Chats/Chats.tsx","components/SignIn/index.ts","components/SignIn/SignIn.tsx","components/App/index.ts","components/App/App.tsx","reducers/dialogs.ts","reducers/messages.ts","reducers/sendMessage.ts","reducers/user.ts","reducers/users.ts","reducers/index.ts","service/firebaseApi.ts","store/sagas.ts","store/index.ts","index.tsx"],"names":["FETCH_AUTH_REQUEST","FETCH_AUTH_SUCCESS","FETCH_AUTH_FAILURE","FETCH_AUTH","LOAD_USER","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","FETCH_USERS","FETCH_MESSAGES_REQUEST","FETCH_MESSAGES_SUCCESS","FETCH_MESSAGES_FAILURE","FETCH_MESSAGES","FETCH_SEND_MESSAGE_REQUEST","FETCH_SEND_MESSAGE_SUCCESS","FETCH_SEND_MESSAGE_FAILURE","FETCH_SEND_MESSAGE","ADD_MESSAGE","FETCH_DIALOGS_REQUEST","FETCH_DIALOGS_SUCCESS","FETCH_DIALOGS_FAILURE","FETCH_DIALOGS","userError","error","type","payload","usersError","addMessage","message","fetchMessages","from","to","sendMessageError","validateMessage","trim","MessageForm","dialog","useSelector","state","messages","user","useState","setMessage","dispatch","useDispatch","className","onSubmit","e","preventDefault","toUser","user1","email","user2","fetchSendMessage","name","placeholder","value","onChange","target","autoComplete","disabled","Message","seconds","isMy","isFirst","classes","push","join","setMessageClass","text","createdAt","Date","parseInt","toLocaleString","style","backgroundImage","photoUrl","Messages","db","useMemo","firebase","firestore","useSound","require","default","play","useEffect","sub","a","dialogRef","collection","doc","get","exists","isInitState","onSnapshot","includeMetadataChanges","snap","docChanges","forEach","change","data","id","getTime","err","console","log","func","then","useDialogSub","map","i","length","NoDialog","Chat","loading","ChatsNav","active","onSetActive","setActiveClass","item","onClick","src","dialogActiveIcon","alt","dialogIcon","findActiveIcon","findIcon","Dialog","date","isActive","authUser","toLocaleDateString","AuthContext","React","createContext","useAuth","useContext","AuthProvider","auth","children","Provider","NoDialogs","Dialogs","useAuthState","loadingUser","dialogs","dialogId","fetchDialogs","anotherUser","messageText","messageDate","FindInput","onFilter","setEmail","val","UserInFind","Find","users","filteredUsers","setFilteredUsers","word","filter","includes","Profile","show","setShow","prev","signOut","Chats","page","setPage","SignIn","fetchUser","App","loadUser","displayName","photoURL","initialState","initalState","status","reducer","combineReducers","action","sendMessage","Api","provider","GoogleAuthProvider","signInWithPopup","userRef","set","usersRef","snapshot","empty","user1Ref","user2Ref","user1Doc","user2Doc","orderBy","messagesRef","FieldValue","serverTimestamp","add","isDoublicate","getDialogsFromSnaphot","userNum","docs","limit","messagesDocs","d","userDoc","where","fetchUsers","rootSaga","put","call","signInWithGoogle","getUsers","getMessages","getDialogs","all","takeEvery","sagaMiddleware","createSagaMiddleware","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","applyMiddleware","run","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","settings","cacheSizeBytes","CACHE_SIZE_UNLIMITED","enablePersistence","catch","code","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a51b87.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/message.f1aedf04.mp3\";","export const FETCH_AUTH_REQUEST = 'FETCH_AUTH_REQUEST';\r\nexport const FETCH_AUTH_SUCCESS = 'FETCH_AUTH_SUCCESS';\r\nexport const FETCH_AUTH_FAILURE = 'FETCH_AUTH_FAILURE';\r\nexport const FETCH_AUTH = 'FETCH_AUTH';\r\nexport const LOAD_USER = 'LOAD_USER';\r\n\r\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\r\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE';\r\nexport const FETCH_USERS = 'FETCH_USERS';\r\n\r\nexport const FETCH_MESSAGES_REQUEST = 'FETCH_MESSAGES_REQUEST';\r\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS';\r\nexport const FETCH_MESSAGES_FAILURE = 'FETCH_MESSAGES_FAILURE';\r\nexport const FETCH_MESSAGES = 'FETCH_MESSAGES';\r\n\r\nexport const FETCH_SEND_MESSAGE_REQUEST = 'FETCH_SEND_MESSAGE_REQUEST';\r\nexport const FETCH_SEND_MESSAGE_SUCCESS = 'FETCH_SEND_MESSAGE_SUCCESS';\r\nexport const FETCH_SEND_MESSAGE_FAILURE = 'FETCH_SEND_MESSAGE_FAILURE';\r\nexport const FETCH_SEND_MESSAGE = 'FETCH_SEND_MESSAGE';\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nexport const FETCH_DIALOGS_REQUEST = 'FETCH_DIALOGS_REQUEST';\r\nexport const FETCH_DIALOGS_SUCCESS = 'FETCH_DIALOGS_SUCCESS';\r\nexport const FETCH_DIALOGS_FAILURE = 'FETCH_DIALOGS_FAILURE';\r\nexport const FETCH_DIALOGS = 'FETCH_DIALOGS';\r\n","import {\r\n  ADD_MESSAGE,\r\n  FETCH_AUTH,\r\n  FETCH_AUTH_FAILURE,\r\n  FETCH_AUTH_REQUEST,\r\n  FETCH_AUTH_SUCCESS,\r\n  FETCH_DIALOGS,\r\n  FETCH_DIALOGS_FAILURE,\r\n  FETCH_DIALOGS_REQUEST,\r\n  FETCH_DIALOGS_SUCCESS,\r\n  FETCH_MESSAGES,\r\n  FETCH_MESSAGES_FAILURE,\r\n  FETCH_MESSAGES_REQUEST,\r\n  FETCH_MESSAGES_SUCCESS,\r\n  FETCH_SEND_MESSAGE,\r\n  FETCH_SEND_MESSAGE_FAILURE,\r\n  FETCH_SEND_MESSAGE_REQUEST,\r\n  FETCH_SEND_MESSAGE_SUCCESS,\r\n  FETCH_USERS,\r\n  FETCH_USERS_FAILURE,\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  LOAD_USER,\r\n} from '../constraints/ActionTypes';\r\nimport { Dialog, DialogInfo, Message, User } from '../reducers/types';\r\nimport {\r\n  AddMessageAction,\r\n  DialogsRequestAction,\r\n  LoadUserAction,\r\n  MessagesErrorAction,\r\n  MessagesFetchAction,\r\n  MessagesLoadedAction,\r\n  MessagesRequestedAction,\r\n  SendMessageErrorAction,\r\n  SendMessageFetchAction,\r\n  SendMessageLoadedAction,\r\n  SendMessageRequestAction,\r\n  UserErrorAction,\r\n  UserFetchAction,\r\n  UserLoadedAction,\r\n  UserRequestAction,\r\n  UsersErrorAction,\r\n  UsersFetchAction,\r\n  UsersLoadedAction,\r\n  UsersRequestAction,\r\n} from './types';\r\nimport firebase from 'firebase/app';\r\n\r\nexport const userRequested = (): UserRequestAction => ({\r\n  type: FETCH_AUTH_REQUEST,\r\n});\r\n\r\nexport const userLoaded = (user: User): UserLoadedAction => ({\r\n  type: FETCH_AUTH_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const userError = (error: any): UserErrorAction => ({\r\n  type: FETCH_AUTH_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchUser = (auth: firebase.auth.Auth): UserFetchAction => ({\r\n  type: FETCH_AUTH,\r\n  payload: auth,\r\n});\r\n\r\nexport const loadUser = (user: User): LoadUserAction => ({\r\n  type: LOAD_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const usersRequested = (): UsersRequestAction => ({\r\n  type: FETCH_USERS_REQUEST,\r\n});\r\n\r\nexport const usersLoaded = (users: User[]): UsersLoadedAction => ({\r\n  type: FETCH_USERS_SUCCESS,\r\n  payload: users,\r\n});\r\n\r\nexport const usersError = (error: any): UsersErrorAction => ({\r\n  type: FETCH_USERS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchUsers = (): UsersFetchAction => ({\r\n  type: FETCH_USERS,\r\n});\r\n\r\nexport const messagesRequested = (): MessagesRequestedAction => ({\r\n  type: FETCH_MESSAGES_REQUEST,\r\n});\r\n\r\nexport const messagesLoaded = (dialog: Dialog): MessagesLoadedAction => ({\r\n  type: FETCH_MESSAGES_SUCCESS,\r\n  payload: dialog,\r\n});\r\n\r\nexport const messagesError = (error: any): MessagesErrorAction => ({\r\n  type: FETCH_MESSAGES_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const addMessage = (message: Message): AddMessageAction => ({\r\n  type: ADD_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const fetchMessages = (\r\n  from: string,\r\n  to: string,\r\n): MessagesFetchAction => ({\r\n  type: FETCH_MESSAGES,\r\n  payload: { from, to },\r\n});\r\n\r\nexport const sendMessageRequested = (): SendMessageRequestAction => ({\r\n  type: FETCH_SEND_MESSAGE_REQUEST,\r\n});\r\n\r\nexport const sendMessageLoaded = (): SendMessageLoadedAction => ({\r\n  type: FETCH_SEND_MESSAGE_SUCCESS,\r\n});\r\n\r\nexport const sendMessageError = (error: any): SendMessageErrorAction => ({\r\n  type: FETCH_SEND_MESSAGE_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchSendMessage = (\r\n  from: string,\r\n  to: string,\r\n  message: string,\r\n): SendMessageFetchAction => ({\r\n  type: FETCH_SEND_MESSAGE,\r\n  payload: { from, to, message },\r\n});\r\n\r\nexport const dialogsRequested = (): DialogsRequestAction => ({\r\n  type: FETCH_DIALOGS_REQUEST,\r\n});\r\n\r\nexport const dialogsLoaded = (dialogs: DialogInfo[]) => ({\r\n  type: FETCH_DIALOGS_SUCCESS,\r\n  payload: dialogs,\r\n});\r\n\r\nexport const dialogsError = (error: any) => ({\r\n  type: FETCH_DIALOGS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchDialogs = (user: string) => ({\r\n  type: FETCH_DIALOGS,\r\n  payload: user,\r\n});\r\n","export const validateMessage = (message: string) => {\r\n  return message.trim() !== '';\r\n};\r\n","import { MessageForm } from './MessageForm';\r\n\r\nexport default MessageForm;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchSendMessage } from '../../actions';\r\nimport { State } from '../../reducers/types';\r\nimport { validateMessage } from '../../utils/validateFields';\r\nimport './MessageForm.scss';\r\n\r\ninterface Props {}\r\n\r\nexport const MessageForm: React.FC<Props> = ({}) => {\r\n  const dialog = useSelector((state) => (state as State).messages.dialog);\r\n  const user = useSelector((state) => (state as State).user.user);\r\n  const [message, setMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const submitForm = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (validateMessage(message)) {\r\n      const toUser =\r\n        dialog!.user1.email === user?.email\r\n          ? dialog!.user2.email\r\n          : dialog!.user1.email;\r\n      dispatch(fetchSendMessage(user!.email, toUser, message));\r\n\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"chat__form\" onSubmit={submitForm}>\r\n      <p className=\"chat__fields\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"message\"\r\n          className=\"chat__field\"\r\n          placeholder=\"Type a new message...\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          autoComplete=\"off\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"chat__submit\"\r\n          disabled={!validateMessage(message)}\r\n        >\r\n          Send\r\n        </button>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Message.scss';\r\nimport profilePic from '../../assets/images/profile-picture.png';\r\nimport { Message as MessageInterface, User } from '../../reducers/types';\r\nimport { fromUnixToDate } from '../../utils/fromUnixToDate';\r\n\r\ninterface Props {\r\n  isMy?: boolean;\r\n  isFirst?: boolean;\r\n  message: MessageInterface;\r\n  user: User;\r\n}\r\n\r\nexport const Message: React.FC<Props> = ({\r\n  isMy = false,\r\n  isFirst = false,\r\n  message,\r\n  user,\r\n}) => {\r\n  const setMessageClass = () => {\r\n    let classes = ['message'];\r\n    if (!isMy) classes.push('message_others');\r\n    if (isFirst) classes.push('message_first');\r\n    return classes.join(' ');\r\n  };\r\n\r\n  return (\r\n    <div className={setMessageClass()}>\r\n      <p\r\n        className={\r\n          isMy ? 'message__user' : 'message__user message__user_others'\r\n        }\r\n      >\r\n        {user.name}\r\n      </p>\r\n      <div className=\"message__main\">\r\n        <div\r\n          className={\r\n            isMy ? 'message__info' : 'message__info message__info_others'\r\n          }\r\n        >\r\n          <p\r\n            className={\r\n              isMy ? 'message__text' : 'message__text message__text_others'\r\n            }\r\n          >\r\n            {message.text}\r\n          </p>\r\n          <time\r\n            className={\r\n              isMy ? 'message__time' : 'message__time message__time_others'\r\n            }\r\n          >\r\n            {fromUnixToDate(message.createdAt.seconds)}\r\n          </time>\r\n        </div>\r\n        <div\r\n          className={\r\n            isMy ? 'message__image' : 'message__image message__image_others'\r\n          }\r\n          style={{\r\n            backgroundImage: `url(${user?.photoUrl})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const fromUnixToDate = (seconds: string): string => {\r\n  return new Date(parseInt(seconds) * 1000).toLocaleString();\r\n};\r\n\r\nexport const fromUnixToShortDate = (seconds: string): string => {\r\n  return new Date(parseInt(seconds) * 1000).toLocaleDateString();\r\n};\r\n","import { Messages } from './Messages';\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Message, State } from '../../reducers/types';\r\nimport { Message as MessageComp } from '../Message/Message';\r\nimport './Messages.scss';\r\nimport { useDialogSub } from '../../utils/useDialogSub';\r\n\r\ninterface Props {}\r\n\r\nexport const Messages: React.FC<Props> = ({}) => {\r\n  const dialog = useSelector((state) => (state as State).messages.dialog);\r\n  const user = useSelector((state) => (state as State).user.user);\r\n  const isMy = (message: Message) => {\r\n    return message.from === user?.email;\r\n  };\r\n\r\n  useDialogSub(dialog, user);\r\n\r\n  return (\r\n    <div className=\"chat__messages messages\">\r\n      {dialog\r\n        ? dialog.messages.map((message, i) => {\r\n            let isFirst = false;\r\n            if (i < dialog.messages.length - 1) {\r\n              if (isMy(dialog.messages[i + 1]) !== isMy(dialog.messages[i]))\r\n                isFirst = true;\r\n            } else if (i === dialog.messages.length - 1) isFirst = true;\r\n            const user =\r\n              dialog.user1.email === message.from ? dialog.user1 : dialog.user2;\r\n            return (\r\n              <MessageComp\r\n                key={message.id}\r\n                isMy={isMy(message)}\r\n                isFirst={isFirst}\r\n                message={message}\r\n                user={user}\r\n              />\r\n            );\r\n          })\r\n        : null}\r\n    </div>\r\n  );\r\n};\r\n","import firebase from 'firebase/app';\r\nimport { useMemo, useEffect } from 'react';\r\nimport { Dialog, User } from '../reducers/types';\r\nimport 'firebase/firestore';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addMessage } from '../actions';\r\nimport useSound from 'use-sound';\r\n\r\nexport const useDialogSub = (dialog: Dialog | null, user: User | null) => {\r\n  const db = useMemo(() => firebase.firestore(), []);\r\n  const dispatch = useDispatch();\r\n  const [play] = useSound(require('../assets/sounds/message.mp3').default);\r\n\r\n  useEffect(() => {\r\n    let sub: any = () => {};\r\n\r\n    if (dialog && user) {\r\n      // need to define emails\r\n      const from = user!.email;\r\n      const to = dialog!.user1.email === from ? dialog!.user2.email : from;\r\n\r\n      // async function for better usability\r\n      const func = async () => {\r\n        // find dialog\r\n        let dialogRef = db.collection('dialogs').doc(`${from}->${to}`);\r\n        const doc = await dialogRef.get();\r\n        if (!doc.exists) {\r\n          dialogRef = db.collection('dialogs').doc(`${to}->${from}`);\r\n        }\r\n\r\n        // flag for init loading\r\n        let isInitState = true;\r\n\r\n        // set onSnapshot listener\r\n        const sub: any = dialogRef.collection('messages').onSnapshot(\r\n          { includeMetadataChanges: true },\r\n          (snap) => {\r\n            if (isInitState) isInitState = false;\r\n            else {\r\n              snap.docChanges().forEach((change) => {\r\n                const message = change.doc.data();\r\n                if (change.type === 'added') {\r\n                  dispatch(\r\n                    addMessage({\r\n                      id: change.doc.id,\r\n                      from: message.from,\r\n                      text: message.message,\r\n                      createdAt: message.createdAt\r\n                        ? message.createdAt\r\n                        : { seconds: new Date().getTime() / 1000 },\r\n                    }),\r\n                  );\r\n                  if (message.from !== user.email) play();\r\n                }\r\n              });\r\n            }\r\n          },\r\n          (err: any) => {\r\n            console.log(err);\r\n          },\r\n        );\r\n\r\n        // return function to remove listener\r\n        return sub;\r\n      };\r\n\r\n      func().then((data) => (sub = data));\r\n    }\r\n\r\n    return () => {\r\n      sub();\r\n    };\r\n  }, [db, dialog?.user1, dialog?.user2, user, dispatch, play]);\r\n};\r\n","import React from 'react';\r\n\r\nexport const NoDialog: React.FC<{}> = () => {\r\n  return <div className=\"chat__no-dialog\">No dialog loaded...</div>;\r\n};\r\n","import { Chat } from './Chat';\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { State } from '../../reducers/types';\r\nimport MessageForm from '../MessageForm';\r\nimport Messages from '../Messages';\r\nimport './Chat.scss';\r\nimport { NoDialog } from './NoDialog';\r\n\r\nexport const Chat: React.FC<{}> = ({}) => {\r\n  const dialog = useSelector((state) => (state as State).messages.dialog);\r\n  const loading = useSelector((state) => (state as State).messages.loading);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__wrapper\">\r\n        <header className=\"chat__header\">\r\n          <h1 className=\"chat__title\">Chat</h1>\r\n        </header>\r\n        <main className=\"chat__main\">\r\n          <Messages />\r\n          {dialog ? (\r\n            <MessageForm />\r\n          ) : loading ? (\r\n            <div className=\"chat__loading\">Loading...</div>\r\n          ) : (\r\n            <NoDialog />\r\n          )}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/nav-dialogs.0749145d.svg\";","export default __webpack_public_path__ + \"static/media/nav-dialogs-active.aba96228.svg\";","export default __webpack_public_path__ + \"static/media/nav-find.61ccc58c.svg\";","export default __webpack_public_path__ + \"static/media/nav-find-active.7e326660.svg\";","import { ChatsNav } from './ChatsNav';\r\n\r\nexport default ChatsNav;\r\n","import React from 'react';\r\nimport './ChatsNav.scss';\r\nimport dialogIcon from '../../assets/images/svg/nav-dialogs.svg';\r\nimport dialogActiveIcon from '../../assets/images/svg/nav-dialogs-active.svg';\r\nimport findIcon from '../../assets/images/svg/nav-find.svg';\r\nimport findActiveIcon from '../../assets/images/svg/nav-find-active.svg';\r\nimport { ActivePage } from '../Chats/Chats';\r\n\r\ninterface Props {\r\n  active: ActivePage;\r\n  onSetActive: (page: ActivePage) => void;\r\n}\r\n\r\nexport const ChatsNav: React.FC<Props> = ({ active, onSetActive }) => {\r\n  const setActiveClass = (item: ActivePage) => {\r\n    if (item === active) return 'nav__item nav__item_active';\r\n    return 'nav__item';\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <div className=\"nav__wrapper\">\r\n        <ul className=\"nav__list\">\r\n          <li className={setActiveClass('Dialogs')}>\r\n            <button className=\"nav__btn\" onClick={() => onSetActive('Dialogs')}>\r\n              {active === 'Dialogs' ? (\r\n                <img\r\n                  src={dialogActiveIcon}\r\n                  alt=\"Dialogs\"\r\n                  className=\"nav__icon\"\r\n                />\r\n              ) : (\r\n                <img src={dialogIcon} alt=\"Dialogs\" className=\"nav__icon\" />\r\n              )}\r\n            </button>\r\n          </li>\r\n          <li className={setActiveClass('Find')}>\r\n            <button className=\"nav__btn\" onClick={() => onSetActive('Find')}>\r\n              {active === 'Find' ? (\r\n                <img src={findActiveIcon} alt=\"Find\" className=\"nav__icon\" />\r\n              ) : (\r\n                <img src={findIcon} alt=\"Find\" className=\"nav__icon\" />\r\n              )}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './Dialog.scss';\r\nimport { fromUnixToShortDate } from '../../utils/fromUnixToDate';\r\nimport { State, User } from '../../reducers/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchMessages } from '../../actions';\r\n\r\ninterface Props {\r\n  user: User;\r\n  message: string;\r\n  date: any;\r\n  isActive?: boolean;\r\n}\r\n\r\nexport const Dialog: React.FC<Props> = ({\r\n  user,\r\n  message,\r\n  date,\r\n  isActive = false,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const authUser = useSelector((state) => (state as State).user.user);\r\n\r\n  const loadDialog = (from: string | undefined, to: string) => {\r\n    if (from) dispatch(fetchMessages(from, to));\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={isActive ? 'dialog dialog_active' : 'dialog'}\r\n      onClick={() => loadDialog(authUser?.email, user.email)}\r\n    >\r\n      <div\r\n        className=\"dialog__image\"\r\n        style={{\r\n          backgroundImage: `url(${user?.photoUrl})`,\r\n        }}\r\n      ></div>\r\n      <div className=\"dialog__info\">\r\n        <div className=\"dialog__name\">{user.name}</div>\r\n        <div className=\"dialog__text\">{message}</div>\r\n      </div>\r\n      <time\r\n        className={\r\n          isActive ? 'dialog__time dialog__time_active' : 'dialog__time'\r\n        }\r\n      >\r\n        {fromUnixToShortDate(date.seconds)}\r\n      </time>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport firebase from 'firebase/app';\r\n\r\nconst AuthContext = React.createContext({} as firebase.auth.Auth);\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n\r\ninterface Props {\r\n  auth: firebase.auth.Auth;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<Props> = ({ auth, children }) => {\r\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n};\r\n","import React from 'react';\r\n\r\nexport const NoDialogs: React.FC<{}> = () => {\r\n  return <div className=\"dialogs__no-dialogs\">No dialogs yet</div>;\r\n};\r\n","import { Dialogs } from './Dialogs';\r\n\r\nexport default Dialogs;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchDialogs } from '../../actions';\r\nimport { Dialog } from '../Dialog/Dialog';\r\nimport './Dialogs.scss';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useAuth } from '../../utils/authContext';\r\nimport { State } from '../../reducers/types';\r\nimport { NoDialogs } from './NoDialogs';\r\n\r\ninterface Props {}\r\n\r\nexport const Dialogs: React.FC<Props> = ({}) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useAuth();\r\n  const [user, loadingUser] = useAuthState(auth);\r\n  const dialogs = useSelector((state) => (state as State).dialogs.dialogs);\r\n  const loading = useSelector((state) => (state as State).dialogs.loading);\r\n  const dialogId = useSelector((state) => (state as State).messages.dialog?.id);\r\n\r\n  useEffect(() => {\r\n    if (user && !loadingUser) dispatch(fetchDialogs(user.email));\r\n  }, [user, dispatch]);\r\n\r\n  return (\r\n    <div className=\"chats__bottom dialogs\">\r\n      <div className=\"dialogs__wrapper\">\r\n        {dialogs.length ? (\r\n          dialogs.map((dialog) => {\r\n            return (\r\n              <Dialog\r\n                key={dialog.id}\r\n                user={dialog.anotherUser}\r\n                message={dialog.messageText}\r\n                date={dialog.messageDate}\r\n                isActive={dialog.id === dialogId}\r\n              />\r\n            );\r\n          })\r\n        ) : loading ? (\r\n          <div className=\"dialogs__loading\">Loading...</div>\r\n        ) : (\r\n          <NoDialogs />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  onFilter: (word: string) => void;\r\n}\r\n\r\nexport const FindInput: React.FC<Props> = ({ onFilter }) => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = e.target.value.trim();\r\n    setEmail(val);\r\n    onFilter(val);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"email\"\r\n      name=\"email\"\r\n      className=\"find__input\"\r\n      placeholder=\"Type email here...\"\r\n      value={email}\r\n      onChange={handleChange}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\n","import { UserInFind } from './UserInFind';\r\n\r\nexport default UserInFind;\r\n","import React from 'react';\r\nimport './UserInFind.scss';\r\nimport { State, User } from '../../reducers/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchMessages } from '../../actions';\r\n\r\ninterface Props {\r\n  user: User;\r\n}\r\n\r\nexport const UserInFind: React.FC<Props> = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector((state) => (state as State).user.user!.email);\r\n\r\n  const loadDialog = (from: string, to: string) => {\r\n    dispatch(fetchMessages(from, to));\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className=\"user-find\"\r\n      onClick={() => {\r\n        loadDialog(email, user.email);\r\n      }}\r\n    >\r\n      <div\r\n        className=\"user-find__image\"\r\n        style={{\r\n          backgroundImage: `url(${user?.photoUrl})`,\r\n        }}\r\n      ></div>\r\n      <div className=\"user-find__info\">\r\n        <div className=\"user-find__name\">{user.name}</div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n","import { Find } from './Find';\r\n\r\nexport default Find;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers } from '../../actions';\r\nimport { State } from '../../reducers/types';\r\nimport { FindInput } from '../FindInput/FindInput';\r\nimport UserInFind from '../UserInFind';\r\nimport './Find.scss';\r\n\r\nexport const Find: React.FC<{}> = () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => (state as State).users.loading);\r\n  const users = useSelector((state) => (state as State).users.users);\r\n  const [filteredUsers, setFilteredUsers] = useState(users);\r\n\r\n  const filterUsers = (word: string) => {\r\n    setFilteredUsers(users.filter((user) => user.email.includes(word)));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setFilteredUsers(users);\r\n  }, [users]);\r\n\r\n  return (\r\n    <div className=\"find\">\r\n      <FindInput onFilter={filterUsers} />\r\n      <div className=\"find__wrapper\">\r\n        {loading ? (\r\n          <div className=\"find__loading\">loading...</div>\r\n        ) : (\r\n          filteredUsers.map((user) => (\r\n            <UserInFind key={user.email} user={user} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Profile } from './Profile';\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport './Profile.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { State } from '../../reducers/types';\r\nimport { useAuth } from '../../utils/authContext';\r\n\r\ninterface Props {}\r\n\r\nexport const Profile: React.FC<Props> = ({}) => {\r\n  const user = useSelector((state) => (state as State).user.user);\r\n  const [show, setShow] = useState(false);\r\n  const auth = useAuth();\r\n\r\n  return (\r\n    <div className=\"chats__top profile\">\r\n      <div\r\n        className=\"profile__image\"\r\n        style={{\r\n          backgroundImage: `url(${user?.photoUrl})`,\r\n        }}\r\n      ></div>\r\n      <div className=\"profile__details\">\r\n        <p className=\"profile__name\">{user?.name}</p>\r\n        {/* <button className=\"profile__status\">\r\n          <div\r\n            className=\"profile__status-indicator\"\r\n            style={{ backgroundColor: '#F3BA4A' }}\r\n          ></div>\r\n          <p className=\"profile__status-text\">Working</p>\r\n        </button> */}\r\n      </div>\r\n      <button\r\n        className=\"profile__settings\"\r\n        onClick={() => setShow((prev) => !prev)}\r\n      >\r\n        <div className=\"profile__settings-ellipse\"></div>\r\n        <div className=\"profile__settings-ellipse\"></div>\r\n        <div className=\"profile__settings-ellipse\"></div>\r\n      </button>\r\n      {show && (\r\n        <div className=\"profile__settings-tab\">\r\n          <button\r\n            className=\"profile__sign-out sign-out\"\r\n            onClick={() => auth.signOut()}\r\n          >\r\n            Sign out\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Chats } from './Chats';\r\n\r\nexport default Chats;\r\n","import React, { useState } from 'react';\r\nimport ChatsNav from '../ChatsNav';\r\nimport Dialogs from '../Dialogs';\r\nimport Find from '../Find';\r\nimport Profile from '../Profile';\r\nimport './Chats.scss';\r\n\r\nexport type ActivePage = 'Dialogs' | 'Find';\r\n\r\nexport const Chats: React.FC<{}> = ({}) => {\r\n  const [page, setPage] = useState<ActivePage>('Dialogs');\r\n  const setActivePage = (page: ActivePage) => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chats\">\r\n      <Profile />\r\n      <div></div>\r\n      {page === 'Dialogs' ? <Dialogs /> : <Find />}\r\n      <ChatsNav active={page} onSetActive={setActivePage} />\r\n    </div>\r\n  );\r\n};\r\n","import { SignIn } from './SignIn';\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport { useAuth } from '../../utils/authContext';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchUser } from '../../actions';\r\nimport './SignIn.scss';\r\n\r\ninterface Props {}\r\n\r\nexport const SignIn: React.FC<Props> = ({}) => {\r\n  const auth = useAuth();\r\n  const dispatch = useDispatch();\r\n\r\n  const signInWithGoogle = () => {\r\n    dispatch(fetchUser(auth));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <button className=\"sign-in__btn\" onClick={signInWithGoogle}>\r\n        Sign in with Google\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { App } from './App';\r\n\r\nexport default App;\r\n","import React, { useEffect } from 'react';\nimport Chat from '../Chat';\nimport Chats from '../Chats';\nimport './App.scss';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useAuth } from '../../utils/authContext';\nimport SignIn from '../SignIn';\nimport { useDispatch } from 'react-redux';\nimport { loadUser } from '../../actions';\n\nexport const App: React.FC<{}> = () => {\n  const auth = useAuth();\n  const [user, loading] = useAuthState(auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user)\n      dispatch(\n        loadUser({\n          name: user.displayName,\n          email: user.email,\n          photoUrl: user.photoURL,\n        }),\n      );\n  }, [dispatch, user]);\n\n  return (\n    <>\n      {user ? (\n        <div className=\"app\">\n          <Chats />\n          <Chat />\n        </div>\n      ) : loading ? (\n        <div className=\"app-loading\">Loading...</div>\n      ) : (\n        <SignIn />\n      )}\n    </>\n  );\n};\n","import { DialogsActionTypes } from '../actions/types';\r\nimport {\r\n  FETCH_DIALOGS_FAILURE,\r\n  FETCH_DIALOGS_REQUEST,\r\n  FETCH_DIALOGS_SUCCESS,\r\n} from '../constraints/ActionTypes';\r\nimport { DialogsState } from './types';\r\n\r\nconst initialState: DialogsState = {\r\n  dialogs: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const dialogsReducer = (\r\n  state: DialogsState = initialState,\r\n  action: DialogsActionTypes,\r\n): DialogsState => {\r\n  switch (action.type) {\r\n    case FETCH_DIALOGS_REQUEST:\r\n      return {\r\n        dialogs: [],\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_DIALOGS_SUCCESS:\r\n      return {\r\n        dialogs: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_DIALOGS_FAILURE:\r\n      return {\r\n        dialogs: [],\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { MessagesActionTypes } from '../actions/types';\r\nimport {\r\n  ADD_MESSAGE,\r\n  FETCH_MESSAGES_FAILURE,\r\n  FETCH_MESSAGES_REQUEST,\r\n  FETCH_MESSAGES_SUCCESS,\r\n} from '../constraints/ActionTypes';\r\nimport { MessagesState, Dialog } from './types';\r\n\r\nconst initialState: MessagesState = {\r\n  dialog: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const messagesReducer = (\r\n  state: MessagesState = initialState,\r\n  action: MessagesActionTypes,\r\n): MessagesState => {\r\n  switch (action.type) {\r\n    case FETCH_MESSAGES_REQUEST:\r\n      return {\r\n        dialog: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_MESSAGES_SUCCESS:\r\n      return {\r\n        dialog: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_MESSAGES_FAILURE:\r\n      return {\r\n        dialog: null,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ADD_MESSAGE:\r\n      let dialog: Dialog | null = null;\r\n      if (state.dialog)\r\n        dialog = {\r\n          ...state.dialog,\r\n          messages: [action.payload, ...state.dialog.messages],\r\n        };\r\n      return {\r\n        ...state,\r\n        dialog,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SendMessageActionTypes } from '../actions/types';\r\nimport {\r\n  FETCH_SEND_MESSAGE_FAILURE,\r\n  FETCH_SEND_MESSAGE_REQUEST,\r\n  FETCH_SEND_MESSAGE_SUCCESS,\r\n} from '../constraints/ActionTypes';\r\nimport { SendMessageState } from './types';\r\n\r\nconst initalState: SendMessageState = {\r\n  status: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const sendMessageReducer = (\r\n  state: SendMessageState = initalState,\r\n  action: SendMessageActionTypes,\r\n): SendMessageState => {\r\n  switch (action.type) {\r\n    case FETCH_SEND_MESSAGE_REQUEST:\r\n      return {\r\n        status: false,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_SEND_MESSAGE_SUCCESS:\r\n      return {\r\n        status: true,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_SEND_MESSAGE_FAILURE:\r\n      return {\r\n        status: false,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { UserActionTypes } from '../actions/types';\r\nimport {\r\n  FETCH_AUTH_FAILURE,\r\n  FETCH_AUTH_REQUEST,\r\n  FETCH_AUTH_SUCCESS,\r\n  LOAD_USER,\r\n} from '../constraints/ActionTypes';\r\nimport { UserState } from './types';\r\n\r\nconst initialState: UserState = {\r\n  user: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const userReducer = (\r\n  state: UserState = initialState,\r\n  action: UserActionTypes,\r\n): UserState => {\r\n  switch (action.type) {\r\n    case FETCH_AUTH_REQUEST:\r\n      return {\r\n        user: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_AUTH_SUCCESS:\r\n      return {\r\n        user: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_AUTH_FAILURE:\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case LOAD_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { UsersActionTypes } from '../actions/types';\r\nimport {\r\n  FETCH_USERS_FAILURE,\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n} from '../constraints/ActionTypes';\r\nimport { UsersState } from './types';\r\n\r\nconst initialState: UsersState = {\r\n  users: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const usersReducer = (\r\n  state: UsersState = initialState,\r\n  action: UsersActionTypes,\r\n): UsersState => {\r\n  switch (action.type) {\r\n    case FETCH_USERS_REQUEST:\r\n      return {\r\n        users: [],\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case FETCH_USERS_SUCCESS:\r\n      return {\r\n        users: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case FETCH_USERS_FAILURE:\r\n      return {\r\n        users: [],\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { dialogsReducer } from './dialogs';\r\nimport { messagesReducer } from './messages';\r\nimport { sendMessageReducer } from './sendMessage';\r\nimport { userReducer } from './user';\r\nimport { usersReducer } from './users';\r\n\r\nexport const reducer = combineReducers({\r\n  user: userReducer,\r\n  users: usersReducer,\r\n  messages: messagesReducer,\r\n  sendMessage: sendMessageReducer,\r\n  dialogs: dialogsReducer,\r\n});\r\n","import firebase from 'firebase/app';\r\nimport { Dialog, DialogInfo, Message, User } from '../reducers/types';\r\nimport 'firebase/firestore';\r\n\r\nexport class Api {\r\n  static async signInWithGoogle(\r\n    auth: firebase.auth.Auth,\r\n  ): Promise<User | null> {\r\n    const db = firebase.firestore();\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    const { user } = await auth.signInWithPopup(provider);\r\n\r\n    if (!user) {\r\n      auth.signOut();\r\n      return null;\r\n    }\r\n\r\n    if (user) {\r\n      const userRef = db.collection('users').doc(user?.email!);\r\n      const doc = await userRef.get();\r\n\r\n      if (!doc.exists) {\r\n        const data = {\r\n          name: user?.displayName,\r\n          photoUrl: user?.photoURL,\r\n        };\r\n\r\n        try {\r\n          await db.collection('users').doc(user?.email!).set(data);\r\n        } catch (e) {\r\n          await auth.signOut();\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      name: user?.displayName!,\r\n      email: user?.email!,\r\n      photoUrl: user?.photoURL!,\r\n    };\r\n  }\r\n\r\n  static async getUsers(): Promise<User[]> {\r\n    const db = firebase.firestore();\r\n    const usersRef = db.collection('users');\r\n    const snapshot = await usersRef.get();\r\n    if (snapshot.empty) {\r\n      console.log('No matching documents.');\r\n      return [];\r\n    }\r\n\r\n    const users: User[] = [];\r\n    snapshot.forEach((doc) => {\r\n      users.push({\r\n        email: doc.id,\r\n        name: doc.data().name,\r\n        photoUrl: doc.data().photoUrl,\r\n      });\r\n    });\r\n\r\n    return users;\r\n  }\r\n\r\n  static async getMessages({\r\n    from,\r\n    to,\r\n  }: {\r\n    from: string;\r\n    to: string;\r\n  }): Promise<Dialog | null> {\r\n    const db = firebase.firestore();\r\n    const user1Ref = db.collection('users').doc(from);\r\n    const user2Ref = db.collection('users').doc(to);\r\n    const user1Doc = await user1Ref.get();\r\n    const user2Doc = await user2Ref.get();\r\n\r\n    if (!user1Doc.exists || !user2Doc.exists) return null;\r\n\r\n    const user1 = {\r\n      email: user1Doc.id,\r\n      name: user1Doc.data()!.name,\r\n      photoUrl: user1Doc.data()!.photoUrl,\r\n    };\r\n    const user2 = {\r\n      email: user2Doc.id,\r\n      name: user2Doc.data()!.name,\r\n      photoUrl: user2Doc.data()!.photoUrl,\r\n    };\r\n\r\n    let dialogRef = db.collection('dialogs').doc(`${from}->${to}`);\r\n    let doc = await dialogRef.get();\r\n\r\n    if (!doc.exists) {\r\n      dialogRef = db.collection('dialogs').doc(`${to}->${from}`);\r\n      doc = await dialogRef.get();\r\n      if (!doc.exists) {\r\n        return {\r\n          user1,\r\n          user2,\r\n          messages: [],\r\n          id: '',\r\n        };\r\n      }\r\n    }\r\n    const messagesRef = await dialogRef\r\n      .collection('messages')\r\n      .orderBy('createdAt', 'desc');\r\n    const snapshot = await messagesRef.get();\r\n    if (snapshot.empty) {\r\n      console.log('No matching documents.');\r\n      return {\r\n        user1,\r\n        user2,\r\n        messages: [],\r\n        id: '',\r\n      };\r\n    }\r\n\r\n    const messages: Message[] = [];\r\n    snapshot.forEach((doc) => {\r\n      messages.push({\r\n        id: doc.id,\r\n        from: doc.data().from,\r\n        text: doc.data().message,\r\n        createdAt: doc.data().createdAt,\r\n      });\r\n    });\r\n\r\n    return {\r\n      user1,\r\n      user2,\r\n      messages,\r\n      id: doc.id,\r\n    };\r\n  }\r\n\r\n  static async addMessage({\r\n    from,\r\n    to,\r\n    message,\r\n  }: {\r\n    from: string;\r\n    to: string;\r\n    message: string;\r\n  }): Promise<{ status: boolean } | null> {\r\n    const db = firebase.firestore();\r\n    const user1Ref = db.collection('users').doc(from);\r\n    const user2Ref = db.collection('users').doc(to);\r\n    const user1Doc = await user1Ref.get();\r\n    const user2Doc = await user2Ref.get();\r\n\r\n    if (!user1Doc.exists || !user2Doc.exists) return null;\r\n\r\n    // is there the dialog\r\n    let dialogRef = db.collection('dialogs').doc(`${from}->${to}`);\r\n    const doc = await dialogRef.get();\r\n\r\n    if (!doc.exists) {\r\n      dialogRef = db.collection('dialogs').doc(`${to}->${from}`);\r\n      const doc = await dialogRef.get();\r\n      if (!doc.exists) {\r\n        // if no dialog exists\r\n        try {\r\n          await dialogRef.set({\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user1: from,\r\n            user2: to,\r\n          });\r\n        } catch (e) {\r\n          console.log(e);\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n\r\n    await dialogRef.collection('messages').add({\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      from,\r\n      message,\r\n    });\r\n\r\n    return {\r\n      status: true,\r\n    };\r\n  }\r\n\r\n  static async getDialogs(user: string): Promise<DialogInfo[]> {\r\n    const db = firebase.firestore();\r\n    const dialogs: DialogInfo[] = [];\r\n\r\n    let isDoublicate = false;\r\n\r\n    const getDialogsFromSnaphot = async (snapshot: any, userNum: number) => {\r\n      for (let doc of snapshot.docs) {\r\n        // avoid dublicate\r\n        if (doc.data().user1 === doc.data().user2 && isDoublicate) continue;\r\n\r\n        const anotherUser = userNum === 1 ? doc.data().user2 : doc.data().user1;\r\n        if (user === anotherUser) isDoublicate = true;\r\n        let messageText = '';\r\n        let messageDate: any = null;\r\n        const messagesDocs = await db\r\n          .collection('dialogs')\r\n          .doc(doc.id)\r\n          .collection('messages')\r\n          .orderBy('createdAt', 'desc')\r\n          .limit(1)\r\n          .get();\r\n        for (let d of messagesDocs.docs) {\r\n          messageText = d.data().message;\r\n          messageDate = d.data().createdAt;\r\n        }\r\n        const userDoc = await db.collection('users').doc(anotherUser).get();\r\n        dialogs.push({\r\n          id: doc.id,\r\n          messageText: messageText,\r\n          messageDate: messageDate,\r\n          anotherUser: {\r\n            email: userDoc.id,\r\n            name: userDoc.data()!.name,\r\n            photoUrl: userDoc.data()!.photoUrl,\r\n          },\r\n        });\r\n      }\r\n    };\r\n\r\n    let dialogRef = db.collection('dialogs').where('user1', '==', user);\r\n    let snapshot = await dialogRef.get();\r\n\r\n    await getDialogsFromSnaphot(snapshot, 1);\r\n\r\n    dialogRef = db.collection('dialogs').where('user2', '==', user);\r\n    snapshot = await dialogRef.get();\r\n\r\n    await getDialogsFromSnaphot(snapshot, 2);\r\n\r\n    return dialogs;\r\n  }\r\n}\r\n","import { all, call, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  dialogsError,\r\n  dialogsLoaded,\r\n  dialogsRequested,\r\n  messagesError,\r\n  messagesLoaded,\r\n  messagesRequested,\r\n  sendMessageError,\r\n  sendMessageLoaded,\r\n  sendMessageRequested,\r\n  userError,\r\n  userLoaded,\r\n  userRequested,\r\n  usersError,\r\n  usersLoaded,\r\n  usersRequested,\r\n} from '../actions';\r\nimport {\r\n  DialogsFetchAction,\r\n  MessagesFetchAction,\r\n  SendMessageFetchAction,\r\n  UserFetchAction,\r\n} from '../actions/types';\r\nimport {\r\n  FETCH_AUTH,\r\n  FETCH_DIALOGS,\r\n  FETCH_MESSAGES,\r\n  FETCH_SEND_MESSAGE,\r\n  FETCH_USERS,\r\n} from '../constraints/ActionTypes';\r\nimport { Dialog, DialogInfo, User } from '../reducers/types';\r\nimport { Api } from '../service/firebaseApi';\r\n\r\nexport function* fetchUser(action: UserFetchAction) {\r\n  try {\r\n    yield put(userRequested());\r\n    const data: User | null = yield call(Api.signInWithGoogle, action.payload);\r\n    if (data) yield put(userLoaded(data));\r\n    else yield put(userError('not authenticated'));\r\n  } catch (error) {\r\n    yield put(userError(error));\r\n  }\r\n}\r\n\r\nexport function* fetchUsers() {\r\n  try {\r\n    yield put(usersRequested());\r\n    const data: User[] = yield call(Api.getUsers);\r\n    yield put(usersLoaded(data));\r\n  } catch (error) {\r\n    yield put(usersError(error));\r\n  }\r\n}\r\n\r\nexport function* fetchMessages(action: MessagesFetchAction) {\r\n  try {\r\n    yield put(messagesRequested());\r\n    const data: Dialog | null = yield call(Api.getMessages, action.payload);\r\n    if (data) yield put(messagesLoaded(data));\r\n    else yield put(messagesError(\"couldn't find dialog\"));\r\n  } catch (error) {\r\n    yield put(usersError(error));\r\n  }\r\n}\r\n\r\nexport function* fetchSendMessage(action: SendMessageFetchAction) {\r\n  try {\r\n    yield put(sendMessageRequested());\r\n    const data: { status: boolean } | null = yield call(\r\n      Api.addMessage,\r\n      action.payload,\r\n    );\r\n    if (data) yield put(sendMessageLoaded());\r\n    else yield put(sendMessageError(\"couldn't create message\"));\r\n  } catch (error) {\r\n    yield put(sendMessageError(error));\r\n  }\r\n}\r\n\r\nexport function* fetchDialogs(action: DialogsFetchAction) {\r\n  try {\r\n    yield put(dialogsRequested());\r\n    const data: DialogInfo[] = yield call(Api.getDialogs, action.payload);\r\n    yield put(dialogsLoaded(data));\r\n  } catch (error) {\r\n    yield put(dialogsError(error));\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    takeEvery(FETCH_AUTH, fetchUser),\r\n    takeEvery(FETCH_USERS, fetchUsers),\r\n    takeEvery(FETCH_MESSAGES, fetchMessages),\r\n    takeEvery(FETCH_SEND_MESSAGE, fetchSendMessage),\r\n    takeEvery(FETCH_DIALOGS, fetchDialogs),\r\n  ]);\r\n}\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport { reducer } from '../reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nlet devTools: (a: any) => any =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__();\r\nif (\r\n  (process.env.NODE_ENV as any) === 'prod' ||\r\n  process.env.NODE_ENV === 'production'\r\n) {\r\n  devTools = (a) => a;\r\n}\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  compose(applyMiddleware(sagaMiddleware), devTools),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/styles.scss';\nimport firebase from 'firebase/app';\nimport { AuthProvider } from './utils/authContext';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: 'echat-56be5.firebaseapp.com',\n  projectId: 'echat-56be5',\n  storageBucket: 'echat-56be5.appspot.com',\n  messagingSenderId: '875853984653',\n  appId: '1:875853984653:web:fcdffab894b219f982c3c4',\n});\n\nfirebase.firestore().settings({\n  cacheSizeBytes: firebase.firestore.CACHE_SIZE_UNLIMITED,\n});\n\nfirebase\n  .firestore()\n  .enablePersistence()\n  .catch(function (err) {\n    console.log(err);\n    if (err.code === 'failed-precondition') {\n      // Multiple tabs open, persistence can only be enabled\n      // in one tab at a a time.\n      // ...\n    } else if (err.code === 'unimplemented') {\n      // The current browser does not support all of the\n      // features required to enable persistence\n      // ...\n    }\n  });\n\nconst auth = firebase.auth();\n\nReactDOM.render(\n  <Provider store={store}>\n    <AuthProvider auth={auth}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </AuthProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}